name: CI Pipeline with Allure Report

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Python and Node.js dependencies
        run: |
          pip install pytest pytest-playwright pytest-base-url allure-pytest faker
          python -m playwright install
          npm install

      - name: Run Pytest and collect Allure results
        run: |
          pytest --alluredir=allure-results

      - name: Install Allure CLI
        run: |
          sudo apt update
          sudo apt install -y default-jre wget unzip
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.zip
          unzip allure-2.27.0.zip
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Generate Allure HTML report
        run: |
          allure generate allure-results -o docs --clean

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs
          publish_branch: gh-pages

      - name: Report Status to Slack
        if: always()
        uses: ravsamhq/notify-slack-action@v1
        with:
          status: ${{ job.status }}
          notify_when: "success,failure"
          message_format: |
            *GitHub Actions Report*
            Repository: ${{ github.repository }}
            Workflow: ${{ github.workflow }}
            Job: ${{ github.job }}
            Status: ${{ job.status }}
            Run: ${{ github.run_number }}
            Report: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.ACTION_MONITORING_SLACK }}



# name: CI Pipeline for Playwright and Pytest

# on:
  # push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   test_and_deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10'

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16'

#       - name: Install Python and Node.js dependencies
#         run: |
#           pip install pytest pytest-playwright pytest-html pytest-base-url faker
#           python -m playwright install
#           npm install

#       - name: Run Playwright tests with Pytest and generate HTML report
#         run: |
#           npm run test_report

#       - name: Copy report and assets to publish folder
#         run: |
#           mkdir gh-pages-report
#           cp report.html gh-pages-report/index.html
#           cp dark-theme.css gh-pages-report/

#       - name: Deploy to GitHub Pages
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: gh-pages-report
#           publish_branch: gh-pages
