{"name": "test_signup_with_existing_email_shows_error", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.check: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"#id_gender1\")", "trace": "base_url = 'https://automationexercise.com'\nbrowser = <Browser type=<BrowserType name=chromium executable_path=/home/user/.cache/ms-playwright/chromium-1140/chrome-linux/chrome> version=130.0.6723.31>\n\n    def test_signup_with_existing_email_shows_error(base_url, browser):\n        # Create a valid user first\n        page = browser.new_page()\n>       user = create_test_user(page, base_url)\n\ntest/test_5_register_user_with_existing_email.py:13: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nhelpers/user_factory.py:21: in create_test_user\n    register.fill_account_info(password, 1, 1, 2000)\npages/register_page.py:45: in fill_account_info\n    self.title_radio.check()\n/home/user/.local/lib/python3.10/site-packages/playwright/sync_api/_generated.py:15306: in check\n    self._sync(\n/home/user/.local/lib/python3.10/site-packages/playwright/_impl/_locator.py:141: in check\n    return await self._frame.check(self._selector, strict=True, **params)\n/home/user/.local/lib/python3.10/site-packages/playwright/_impl/_frame.py:741: in check\n    await self._channel.send(\"check\", locals_to_params(locals()))\n/home/user/.local/lib/python3.10/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x7f843500a800>, cb = <function Channel.send.<locals>.<lambda> at 0x7f84351d6d40>, is_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.check: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"#id_gender1\")\n\n/home/user/.local/lib/python3.10/site-packages/playwright/_impl/_connection.py:520: TimeoutError"}, "start": 1746725778148, "stop": 1746725813162, "uuid": "07643d01-7957-4689-9f7f-f7d29f3245ae", "historyId": "68864e311048db331228ff80d3cbfcd7", "testCaseId": "68864e311048db331228ff80d3cbfcd7", "fullName": "test.test_5_register_user_with_existing_email#test_signup_with_existing_email_shows_error", "labels": [{"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_5_register_user_with_existing_email"}, {"name": "host", "value": "user-VivoBook-15-ASUS-Laptop-X540UBR"}, {"name": "thread", "value": "107944-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_5_register_user_with_existing_email"}]}